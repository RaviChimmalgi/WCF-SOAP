'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System.Runtime.Serialization

'
'This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
'
Namespace ServiceReference1
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="UserDetails", [Namespace]:="http://wcfservicetest.org/Service1")>  _
    Partial Public Class UserDetails
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private User_NameField As String
        
        Private time_nowField As Date
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property User_Name() As String
            Get
                Return Me.User_NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.User_NameField, value) <> true) Then
                    Me.User_NameField = value
                    Me.RaisePropertyChanged("User_Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property time_now() As Date
            Get
                Return Me.time_nowField
            End Get
            Set
                If (Me.time_nowField.Equals(value) <> true) Then
                    Me.time_nowField = value
                    Me.RaisePropertyChanged("time_now")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="testadd", [Namespace]:="http://wcfservicetest.org/Service1")>  _
    Partial Public Class testadd
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private number_1Field As Integer
        
        Private number_2Field As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property number_1() As Integer
            Get
                Return Me.number_1Field
            End Get
            Set
                If (Me.number_1Field.Equals(value) <> true) Then
                    Me.number_1Field = value
                    Me.RaisePropertyChanged("number_1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property number_2() As Integer
            Get
                Return Me.number_2Field
            End Get
            Set
                If (Me.number_2Field.Equals(value) <> true) Then
                    Me.number_2Field = value
                    Me.RaisePropertyChanged("number_2")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://wcfservicetest.org/Service1", ConfigurationName:="ServiceReference1.IService1")>  _
    Public Interface IService1
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://wcfservicetest.org/Service1/IService1/InsertUserDetails", ReplyAction:="http://wcfservicetest.org/Service1/IService1/InsertUserDetailsResponse")>  _
        Function BeginInsertUserDetails(ByVal userInfo As ServiceReference1.UserDetails, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndInsertUserDetails(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://wcfservicetest.org/Service1/IService1/UpdateUserDetails", ReplyAction:="http://wcfservicetest.org/Service1/IService1/UpdateUserDetailsResponse")>  _
        Function BeginUpdateUserDetails(ByVal userInfo As ServiceReference1.UserDetails, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndUpdateUserDetails(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://wcfservicetest.org/Service1/IService1/getusercount", ReplyAction:="http://wcfservicetest.org/Service1/IService1/getusercountResponse")>  _
        Function Begingetusercount(ByVal username As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function Endgetusercount(ByVal result As System.IAsyncResult) As Integer
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://wcfservicetest.org/Service1/IService1/ksoapAdd", ReplyAction:="http://wcfservicetest.org/Service1/IService1/ksoapAddResponse")>  _
        Function BeginksoapAdd(ByVal num1 As ServiceReference1.testadd, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndksoapAdd(ByVal result As System.IAsyncResult) As Integer
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://wcfservicetest.org/Service1/IService1/addParam", ReplyAction:="http://wcfservicetest.org/Service1/IService1/addParamResponse")>  _
        Function BeginaddParam(ByVal num1 As Integer, ByVal num2 As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndaddParam(ByVal result As System.IAsyncResult) As Integer
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IService1Channel
        Inherits ServiceReference1.IService1, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class InsertUserDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class UpdateUserDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class getusercountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Integer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ksoapAddCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Integer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class addParamCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Integer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class Service1Client
        Inherits System.ServiceModel.ClientBase(Of ServiceReference1.IService1)
        Implements ServiceReference1.IService1
        
        Private onBeginInsertUserDetailsDelegate As BeginOperationDelegate
        
        Private onEndInsertUserDetailsDelegate As EndOperationDelegate
        
        Private onInsertUserDetailsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginUpdateUserDetailsDelegate As BeginOperationDelegate
        
        Private onEndUpdateUserDetailsDelegate As EndOperationDelegate
        
        Private onUpdateUserDetailsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetusercountDelegate As BeginOperationDelegate
        
        Private onEndgetusercountDelegate As EndOperationDelegate
        
        Private ongetusercountCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginksoapAddDelegate As BeginOperationDelegate
        
        Private onEndksoapAddDelegate As EndOperationDelegate
        
        Private onksoapAddCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginaddParamDelegate As BeginOperationDelegate
        
        Private onEndaddParamDelegate As EndOperationDelegate
        
        Private onaddParamCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginOpenDelegate As BeginOperationDelegate
        
        Private onEndOpenDelegate As EndOperationDelegate
        
        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginCloseDelegate As BeginOperationDelegate
        
        Private onEndCloseDelegate As EndOperationDelegate
        
        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC"& _ 
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property
        
        Public Event InsertUserDetailsCompleted As System.EventHandler(Of InsertUserDetailsCompletedEventArgs)
        
        Public Event UpdateUserDetailsCompleted As System.EventHandler(Of UpdateUserDetailsCompletedEventArgs)
        
        Public Event getusercountCompleted As System.EventHandler(Of getusercountCompletedEventArgs)
        
        Public Event ksoapAddCompleted As System.EventHandler(Of ksoapAddCompletedEventArgs)
        
        Public Event addParamCompleted As System.EventHandler(Of addParamCompletedEventArgs)
        
        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_BeginInsertUserDetails(ByVal userInfo As ServiceReference1.UserDetails, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginInsertUserDetails
            Return MyBase.Channel.BeginInsertUserDetails(userInfo, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_EndInsertUserDetails(ByVal result As System.IAsyncResult) As String Implements ServiceReference1.IService1.EndInsertUserDetails
            Return MyBase.Channel.EndInsertUserDetails(result)
        End Function
        
        Private Function OnBeginInsertUserDetails(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim userInfo As ServiceReference1.UserDetails = CType(inValues(0),ServiceReference1.UserDetails)
            Return CType(Me,ServiceReference1.IService1).BeginInsertUserDetails(userInfo, callback, asyncState)
        End Function
        
        Private Function OnEndInsertUserDetails(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = CType(Me,ServiceReference1.IService1).EndInsertUserDetails(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnInsertUserDetailsCompleted(ByVal state As Object)
            If (Not (Me.InsertUserDetailsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent InsertUserDetailsCompleted(Me, New InsertUserDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub InsertUserDetailsAsync(ByVal userInfo As ServiceReference1.UserDetails)
            Me.InsertUserDetailsAsync(userInfo, Nothing)
        End Sub
        
        Public Overloads Sub InsertUserDetailsAsync(ByVal userInfo As ServiceReference1.UserDetails, ByVal userState As Object)
            If (Me.onBeginInsertUserDetailsDelegate Is Nothing) Then
                Me.onBeginInsertUserDetailsDelegate = AddressOf Me.OnBeginInsertUserDetails
            End If
            If (Me.onEndInsertUserDetailsDelegate Is Nothing) Then
                Me.onEndInsertUserDetailsDelegate = AddressOf Me.OnEndInsertUserDetails
            End If
            If (Me.onInsertUserDetailsCompletedDelegate Is Nothing) Then
                Me.onInsertUserDetailsCompletedDelegate = AddressOf Me.OnInsertUserDetailsCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginInsertUserDetailsDelegate, New Object() {userInfo}, Me.onEndInsertUserDetailsDelegate, Me.onInsertUserDetailsCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_BeginUpdateUserDetails(ByVal userInfo As ServiceReference1.UserDetails, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginUpdateUserDetails
            Return MyBase.Channel.BeginUpdateUserDetails(userInfo, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_EndUpdateUserDetails(ByVal result As System.IAsyncResult) As String Implements ServiceReference1.IService1.EndUpdateUserDetails
            Return MyBase.Channel.EndUpdateUserDetails(result)
        End Function
        
        Private Function OnBeginUpdateUserDetails(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim userInfo As ServiceReference1.UserDetails = CType(inValues(0),ServiceReference1.UserDetails)
            Return CType(Me,ServiceReference1.IService1).BeginUpdateUserDetails(userInfo, callback, asyncState)
        End Function
        
        Private Function OnEndUpdateUserDetails(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = CType(Me,ServiceReference1.IService1).EndUpdateUserDetails(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnUpdateUserDetailsCompleted(ByVal state As Object)
            If (Not (Me.UpdateUserDetailsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent UpdateUserDetailsCompleted(Me, New UpdateUserDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub UpdateUserDetailsAsync(ByVal userInfo As ServiceReference1.UserDetails)
            Me.UpdateUserDetailsAsync(userInfo, Nothing)
        End Sub
        
        Public Overloads Sub UpdateUserDetailsAsync(ByVal userInfo As ServiceReference1.UserDetails, ByVal userState As Object)
            If (Me.onBeginUpdateUserDetailsDelegate Is Nothing) Then
                Me.onBeginUpdateUserDetailsDelegate = AddressOf Me.OnBeginUpdateUserDetails
            End If
            If (Me.onEndUpdateUserDetailsDelegate Is Nothing) Then
                Me.onEndUpdateUserDetailsDelegate = AddressOf Me.OnEndUpdateUserDetails
            End If
            If (Me.onUpdateUserDetailsCompletedDelegate Is Nothing) Then
                Me.onUpdateUserDetailsCompletedDelegate = AddressOf Me.OnUpdateUserDetailsCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginUpdateUserDetailsDelegate, New Object() {userInfo}, Me.onEndUpdateUserDetailsDelegate, Me.onUpdateUserDetailsCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_Begingetusercount(ByVal username As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.Begingetusercount
            Return MyBase.Channel.Begingetusercount(username, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_Endgetusercount(ByVal result As System.IAsyncResult) As Integer Implements ServiceReference1.IService1.Endgetusercount
            Return MyBase.Channel.Endgetusercount(result)
        End Function
        
        Private Function OnBegingetusercount(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim username As String = CType(inValues(0),String)
            Return CType(Me,ServiceReference1.IService1).Begingetusercount(username, callback, asyncState)
        End Function
        
        Private Function OnEndgetusercount(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Integer = CType(Me,ServiceReference1.IService1).Endgetusercount(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetusercountCompleted(ByVal state As Object)
            If (Not (Me.getusercountCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getusercountCompleted(Me, New getusercountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getusercountAsync(ByVal username As String)
            Me.getusercountAsync(username, Nothing)
        End Sub
        
        Public Overloads Sub getusercountAsync(ByVal username As String, ByVal userState As Object)
            If (Me.onBegingetusercountDelegate Is Nothing) Then
                Me.onBegingetusercountDelegate = AddressOf Me.OnBegingetusercount
            End If
            If (Me.onEndgetusercountDelegate Is Nothing) Then
                Me.onEndgetusercountDelegate = AddressOf Me.OnEndgetusercount
            End If
            If (Me.ongetusercountCompletedDelegate Is Nothing) Then
                Me.ongetusercountCompletedDelegate = AddressOf Me.OngetusercountCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetusercountDelegate, New Object() {username}, Me.onEndgetusercountDelegate, Me.ongetusercountCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_BeginksoapAdd(ByVal num1 As ServiceReference1.testadd, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginksoapAdd
            Return MyBase.Channel.BeginksoapAdd(num1, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_EndksoapAdd(ByVal result As System.IAsyncResult) As Integer Implements ServiceReference1.IService1.EndksoapAdd
            Return MyBase.Channel.EndksoapAdd(result)
        End Function
        
        Private Function OnBeginksoapAdd(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim num1 As ServiceReference1.testadd = CType(inValues(0),ServiceReference1.testadd)
            Return CType(Me,ServiceReference1.IService1).BeginksoapAdd(num1, callback, asyncState)
        End Function
        
        Private Function OnEndksoapAdd(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Integer = CType(Me,ServiceReference1.IService1).EndksoapAdd(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnksoapAddCompleted(ByVal state As Object)
            If (Not (Me.ksoapAddCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent ksoapAddCompleted(Me, New ksoapAddCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub ksoapAddAsync(ByVal num1 As ServiceReference1.testadd)
            Me.ksoapAddAsync(num1, Nothing)
        End Sub
        
        Public Overloads Sub ksoapAddAsync(ByVal num1 As ServiceReference1.testadd, ByVal userState As Object)
            If (Me.onBeginksoapAddDelegate Is Nothing) Then
                Me.onBeginksoapAddDelegate = AddressOf Me.OnBeginksoapAdd
            End If
            If (Me.onEndksoapAddDelegate Is Nothing) Then
                Me.onEndksoapAddDelegate = AddressOf Me.OnEndksoapAdd
            End If
            If (Me.onksoapAddCompletedDelegate Is Nothing) Then
                Me.onksoapAddCompletedDelegate = AddressOf Me.OnksoapAddCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginksoapAddDelegate, New Object() {num1}, Me.onEndksoapAddDelegate, Me.onksoapAddCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_BeginaddParam(ByVal num1 As Integer, ByVal num2 As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginaddParam
            Return MyBase.Channel.BeginaddParam(num1, num2, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function ServiceReference1_IService1_EndaddParam(ByVal result As System.IAsyncResult) As Integer Implements ServiceReference1.IService1.EndaddParam
            Return MyBase.Channel.EndaddParam(result)
        End Function
        
        Private Function OnBeginaddParam(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim num1 As Integer = CType(inValues(0),Integer)
            Dim num2 As Integer = CType(inValues(1),Integer)
            Return CType(Me,ServiceReference1.IService1).BeginaddParam(num1, num2, callback, asyncState)
        End Function
        
        Private Function OnEndaddParam(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Integer = CType(Me,ServiceReference1.IService1).EndaddParam(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnaddParamCompleted(ByVal state As Object)
            If (Not (Me.addParamCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent addParamCompleted(Me, New addParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub addParamAsync(ByVal num1 As Integer, ByVal num2 As Integer)
            Me.addParamAsync(num1, num2, Nothing)
        End Sub
        
        Public Overloads Sub addParamAsync(ByVal num1 As Integer, ByVal num2 As Integer, ByVal userState As Object)
            If (Me.onBeginaddParamDelegate Is Nothing) Then
                Me.onBeginaddParamDelegate = AddressOf Me.OnBeginaddParam
            End If
            If (Me.onEndaddParamDelegate Is Nothing) Then
                Me.onEndaddParamDelegate = AddressOf Me.OnEndaddParam
            End If
            If (Me.onaddParamCompletedDelegate Is Nothing) Then
                Me.onaddParamCompletedDelegate = AddressOf Me.OnaddParamCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginaddParamDelegate, New Object() {num1, num2}, Me.onEndaddParamDelegate, Me.onaddParamCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function
        
        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function
        
        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub
        
        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function
        
        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function
        
        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub
        
        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub
        
        Protected Overrides Function CreateChannel() As ServiceReference1.IService1
            Return New Service1ClientChannel(Me)
        End Function
        
        Private Class Service1ClientChannel
            Inherits ChannelBase(Of ServiceReference1.IService1)
            Implements ServiceReference1.IService1
            
            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of ServiceReference1.IService1))
                MyBase.New(client)
            End Sub
            
            Public Function BeginInsertUserDetails(ByVal userInfo As ServiceReference1.UserDetails, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginInsertUserDetails
                Dim _args((1) - 1) As Object
                _args(0) = userInfo
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("InsertUserDetails", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndInsertUserDetails(ByVal result As System.IAsyncResult) As String Implements ServiceReference1.IService1.EndInsertUserDetails
                Dim _args((0) - 1) As Object
                Dim _result As String = CType(MyBase.EndInvoke("InsertUserDetails", _args, result),String)
                Return _result
            End Function
            
            Public Function BeginUpdateUserDetails(ByVal userInfo As ServiceReference1.UserDetails, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginUpdateUserDetails
                Dim _args((1) - 1) As Object
                _args(0) = userInfo
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("UpdateUserDetails", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndUpdateUserDetails(ByVal result As System.IAsyncResult) As String Implements ServiceReference1.IService1.EndUpdateUserDetails
                Dim _args((0) - 1) As Object
                Dim _result As String = CType(MyBase.EndInvoke("UpdateUserDetails", _args, result),String)
                Return _result
            End Function
            
            Public Function Begingetusercount(ByVal username As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.Begingetusercount
                Dim _args((1) - 1) As Object
                _args(0) = username
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("getusercount", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function Endgetusercount(ByVal result As System.IAsyncResult) As Integer Implements ServiceReference1.IService1.Endgetusercount
                Dim _args((0) - 1) As Object
                Dim _result As Integer = CType(MyBase.EndInvoke("getusercount", _args, result),Integer)
                Return _result
            End Function
            
            Public Function BeginksoapAdd(ByVal num1 As ServiceReference1.testadd, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginksoapAdd
                Dim _args((1) - 1) As Object
                _args(0) = num1
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("ksoapAdd", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndksoapAdd(ByVal result As System.IAsyncResult) As Integer Implements ServiceReference1.IService1.EndksoapAdd
                Dim _args((0) - 1) As Object
                Dim _result As Integer = CType(MyBase.EndInvoke("ksoapAdd", _args, result),Integer)
                Return _result
            End Function
            
            Public Function BeginaddParam(ByVal num1 As Integer, ByVal num2 As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IService1.BeginaddParam
                Dim _args((2) - 1) As Object
                _args(0) = num1
                _args(1) = num2
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("addParam", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndaddParam(ByVal result As System.IAsyncResult) As Integer Implements ServiceReference1.IService1.EndaddParam
                Dim _args((0) - 1) As Object
                Dim _result As Integer = CType(MyBase.EndInvoke("addParam", _args, result),Integer)
                Return _result
            End Function
        End Class
    End Class
End Namespace
